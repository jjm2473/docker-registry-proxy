proxy_cache_path /var/www/cache/registry levels=1:2 keys_zone=registry:10m inactive=60d max_size=1g use_temp_path=off;

server {
	listen 443 ssl http2;
	server_name registry.istoreos.com;
	charset utf-8;
	root /var/www/html;
	include ssl/cf_any_istoreos.com/cf_any_istoreos.com.nginx.conf;

	# Block POST/PUT/DELETE. Don't use this proxy for pushing.
	if ($request_method = POST) {
		return 405 "POST method is not allowed";
	}
	if ($request_method = PUT) {
		return 405 "PUT method is not allowed";
	}
	if ($request_method = DELETE) {
		return 405 "DELETE method is not allowed";
	}

	location /v1 {
		return 405 "docker-registry-proxy: docker is trying to use v1 API. Either the image does not exist upstream, or you need to configure docker-registry-proxy to authenticate against $host";
	}

	location = /v2/ {
		default_type application/json;
		add_header docker-distribution-api-version 'registry/2.0' always;
		add_header www-authenticate 'Bearer realm="https://auth.docker.io/token",service="registry.docker.io"' always;
		return 401 '{"errors":[{"code":"UNAUTHORIZED","message":"authentication required","detail":null}]}';
	}

	location /v2/ {
		# Docker hub
		proxy_pass https://registry-1.docker.io;
		proxy_set_header Host registry-1.docker.io;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;  
		proxy_set_header Authorization $http_authorization;

		# proxy_buffering off;
		proxy_cache_lock on;


		proxy_intercept_errors on;
		recursive_error_pages on;

		error_page 301 302 307 = @handle_redirect;

		# cache
		# GET /v2/library/alpine/manifests/edge
		# GET /v2/library/alpine/manifests/sha256:166710df254975d4a6c4c407c315951c22753dcaa829e020a3fd5d18fff70dd2
		location ~ ^/v2/.+/manifests/[^/]+$ {
			# proxy_pass https://registry-1.docker.io;
			# custom proxy that supports revalidate by HEAD request
			proxy_pass http://127.0.0.1:5000;
			proxy_set_header Host registry-1.docker.io;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Authorization $http_authorization;
			proxy_set_header Accept 'application/vnd.docker.distribution.manifest.list.v2+json, application/vnd.docker.distribution.manifest.v2+json, application/vnd.docker.distribution.manifest.v1+prettyjws, application/vnd.oci.image.index.v1+json, application/vnd.oci.image.manifest.v1+json, application/json';

			proxy_buffering on;
			proxy_cache registry;

			# ; no revalidate
			# proxy_cache_key "$request_method $uri";
			# proxy_cache_convert_head off;
			# proxy_method HEAD;

			# ; revalidate
			proxy_cache_key "$uri";
			proxy_cache_revalidate on;

			proxy_cache_valid 200 1m;
			proxy_cache_valid 404 5m;

			proxy_cache_use_stale error timeout updating http_429 http_500 http_502 http_503 http_504;

			add_header X-Nginx-Cache-Status $upstream_cache_status always;

			location ~ ^/v2/.+/manifests/sha256:[^/]+$ {
				proxy_pass https://registry-1.docker.io;
				# ; no revalidate
				# proxy_cache_convert_head on;
				# proxy_method GET;
				proxy_cache_valid 200 31d;
			}
		}
	}
	location @handle_redirect {
		resolver 1.1.1.1;
		set $saved_redirect_location '$upstream_http_location';
		proxy_pass $saved_redirect_location;
	}
	access_log /var/www/log/registry.istoreos.com.log;
}
